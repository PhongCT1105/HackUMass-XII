{
    "Title": "A view at desktop clouds",
    "Authors": "Alwabel, Abdulelah, Walters, Robert John, Wills, Gary Brian",
    "Year": "No year available",
    "Abstract": "Cloud has emerged as a new computing paradigm that promises to move into computing-as-utility era. Desktop Cloud is a new type of Cloud computing. It merges two computing models: Cloud computing and volunteer computing. The aim of Desktop Cloud is to provide Cloud services out of infrastructure that is not made for this purpose in order to reduce running and maintenance costs. This paper discusses this new type of Cloud by comparing it with current Cloud and Desktop Grid models. It, also, presents several research challenges in Desktop Cloud that require further attention",
    "Keywords": "No keywords available",
    "Publisher": "'Scitepress'",
    "Publication Date": "No publication date available",
    "Journal": "No journal available",
    "Citation Count": 0,
    "Full Text": "A View at Desktop Clouds \nAbdulelah Alwabel, Robert Walters and Gary Wills \nElectronics and Computer Science School, University of Southampton, Southampton, U.K. \n{aa1a10, gbw, rjw1}@ecs.soton.ac.uk \nAbstract. Cloud has emerged as a new computing paradigm that promises to \nmove into computing-as-utility era. Desktop Cloud is a new type of Cloud \ncomputing. It merges two computing models: Cloud computing and volunteer \ncomputing. The aim of Desktop Cloud is to provide Cloud services out of infra-\nstructure that is not made for this purpose in order to reduce running and \nmaintenance costs. This paper discusses this new type of Cloud by comparing it \nwith current Cloud and Desktop Grid models. It, also, presents several research \nchallenges in Desktop Cloud that require further attention. \n1 Introduction \nDesktop Clouds represent a new direction of providing Cloud services based on non-\ndedicated resources. The resources can be any form of computing devices such as \nPCs, laptops …etc. The new type attempts to combine two computing models, name-\nly Cloud computing and Volunteer computing in order to form a Cloud that provides \nservices for less or no cost. Throughout this paper, Traditional Cloud (TC) refers to a \nCloud that relies on dedicated resources to provide services, whereas Desktop Cloud \n(DC) refers to a Cloud that relies on non-dedicated resources. Amazon Cloud, for \ninstance, is a Traditional Cloud. \nThe remaining of this paper is organised as follows. First, the paper starts by giv-\ning an overview about the meaning of Desktop Clouds. In addition, the advantages of \nDesktop Clouds are presented. A brief comparison study between Desktop Clouds, \nTraditional Clouds and Desktop Grids is presented in order to study similarities and \ndifferences. Finally, the paper finishes by discussing research issues in Desktop \nCloud. \n2 Desktop  Clouds \nThe success of Desktop Grids motivates the idea of harnessing idle resources to build \nDesktop Clouds. Hence, the term Desktop comes from Desktop Grids because both of \nDesktop Clouds and Desktop Grids are based on Desktop PCs and laptops etc. Simi-\nlarly, the term Cloud comes from Cloud as Desktop Cloud aims to provide services \nbased on the Cloud business model. Several synonyms for Desktop Cloud have been used, such as Ad-hoc Cloud, Volunteer Clouds and Non-Dedicated Clouds. The liter-\nature shows that very little work has been undertaken in this direction. \n \nFig. 1. Architecture of desktop clouds. \nThe overview architecture of Desktop Clouds is depicted in fig. 1. The architec-\nture is consisted of several layers. The users contact the service layer in order to sub-\nmit their demands. The physical layer is responsible of managing physical nodes that \nare aggregated the resource layer. The virtual layer plays a curtail role in terms of \nisolating Clients request from the physical nodes via virtaulisation. Users are assigned \nvirtual machines that are located in physical machines. Physical machines can be \nconnected by LAN or WLAN. \nAd-hoc Cloud is the idea of harvesting distributed resources within an organisa-\ntion to form a Cloud [1]. Nebula [2, 3] is a project aiming to exploit distributed re-\nsources in order to create a volunteer Cloud which offers services free of charge. \nCloud@home [4, 5] is a project representing the @home philosophy in Cloud compu-\nting. The goal of Cloud@home is to form a new model of Cloud computing contrib-\nuted to by individual users over the Internet. In addition to that, Cern1 has announced \nan initiative to move their Desktop Grid project, which is called LHC@home, toward \nthe Cloud [6]. It is suggested that non-dedicated resources can be exploited by Cloud \nproviders in case their local infrastructure cannot meet requests by consumers at peak \ntimes [7]. \n2.1 Scenario \nSuppose a group of universities wishes to benefit from its computing resources to \nform a Cloud. The resources range from PCs to servers etc, each of them is called a \n                                                           \n1 the European Organization for Nuclear Research \n56Cloud node. A node can join the Cloud when it becomes idle. This scenario is moti-\nvated by Condor [8]. Users in Desktop Cloud submit their request to acquire services \nwith requirements as it is stated in the service level agreement between a client and \nthe Cloud interface. The requests are processed in the virtualisation layer on top of \nCloud physical nodes. The virtualisation isolates the guest operating system from the \nhost physical machine. The isolation improves security and prevents unauthorised \naccess between two parties. \nAnother scenario that can be considered is a universal Desktop Cloud which al-\nlows people to contribute their own computing resources to be used by Cloud clients \n[9]. This example can be considered as public Desktop Cloud. The people are asked \nto contribute their machines in order to form a Desktop Cloud. People can be stimu-\nlated to participate in DC to serve science within research communities. \nTable 1. Desktop Cloud vs. Traditional Cloud. \nFeature  Desktop Cloud  Traditional Cloud \nElasticity  √  √ \nVirtualisation  √  √ \nIdle Resources  √ X \nEase of Use  √  √ \n3  Desktop Clouds vs. Traditional Clouds \nThis section clarifies Desktop Clouds further by comparing them with related areas: \nTraditional Clouds, Grids and Desktop Grids. There are basic differences between \nDesktop Cloud and Traditional Clouds as it is shown in Table 1. Elasticity means that \na consumer can acquire computing services. Then the user can scale up or down ac-\ncording to their needs. Both Traditional Cloud and Desktop Cloud rely heavily on \nvirtualisation. The ease of use principle means that users can use a specific service \nwithout making a lot of changes to their work. Both Traditional Clouds and Desktop \nClouds let their users harness services without making significant changes to their \ncode. However, there are several differences between Desktop and Traditional \nClouds. Firstly, the infrastructure of DC is made of resources that are non-dedicated, \ni.e. not dedicated to be part of Cloud infrastructure. In the contrary, the infrastructure \nof TC is made of a huge number of dedicated computing resources. Secondly, the \nresources in DC are highly distributed across the globe, whereas they are limited in \nTC to several locations in data centres. Furthermore, nodes in DC are highly volatile \ndue to the fact that they can be down unexpectedly without prior notice. Resource \nhigh volatility has negative impact on availability and performance [10]. Although, \nresources in both TC and DC are heterogeneous, they are even more heterogeneous \nand dispersed in DC. Virtualisation plays a key role in Desktop Clouds which makes \nit different from other large scale systems. \nDesktop Clouds have some advantages over Traditional Clouds. Firstly, Tradi-\ntional Clouds have a negative impact on the environment since their data centres \nconsume massive amounts of electricity [11]. The second advantage is cost effective-\nness of Desktop Clouds for both Cloud services providers and their consumers. For \n57service provider, there is no need to build new data centres to meet the increasing \ndemands of the future. Consumers will get their services at lower prices, if not free \ncompared to Traditional Clouds. Also, Desktop Cloud helps in reducing energy con-\nsumption since it utilises already-running undedicated resources which would other-\nwise remain idle. Some studies show that the average percentage of local resources \nbeing idle within an organisation is about 80% [12]. Furthermore, Traditional Clouds \nare formed from a limited number of data centres located around the globe. There-\nfore, they are inefficient in terms of data mobility and pay little attention to the loca-\ntion of clients [3]. Finally, Traditional Clouds are centralised, which leads to the po-\ntential that there could be a single point of failure issue if a Cloud service provider \ngoes out of the business. In contrast, Desktop Clouds manage and offer services in a \ndecentralised manner. \nTable 2. Desktop Cloud vs. Traditional Cloud. \nFeature  Desktop Cloud  Desktop Grid \nElasticity  √ X \nVirtualisation  √ X \nIdle Resources  √  √ \nEase of Use  √ X \n4  Desktop Cloud vs. Desktop Grid \nDesktop Clouds can be confused with other distributed systems, especially Desktop \nGrids. Table 2 shows a comparison between DC and Desktop Grid. Both Desktop \nClouds and desktop Grids serve the same goal that is exploiting idle computing re-\nsources denoted by the public. However, Desktop Grid cannot offer services to clients \nin elasticity way as in Desktop Clouds. Elasticity means that users can require more \ncomputing resources in short term. Users, in Desktop Grids, are expected to know in-\ndepth details about the middleware used in order to be able to harness the offered \nservices [13]. Desktop Grids do not employ virtualisation to isolate users from the \nactual machines. People who wish to contribute their computing machines need to \ninstall a specific software in order to join a Desktop Grid. \n5 Research  Challenges \nThis section discusses several research issues that need further attention. Some of \nthese challenges are inherited from Cloud computing while others are driven by the \nnature of used resources being highly volatile.  \n5.1 Security \nSecurity is one of the major concerns that prevent organisations from moving to the \ncloud [14]. Ristenpart et al. show that an attacker can uncover the actual location of a \n58particular virtual machine (VM) [15]. Then, a cross-VM side channel attack can re-\nveal critical information about the targeted VM by placing a malicious VM on the \nsame physical machine.  \nMore worries arise in DCs where both consumers and contributors are from the \npublic. Therefore, security can be a major issue in this context. In addition to the \nprevious threats presented in the cloud, both consumers and contributors take on risk \nthemselves when they join a DC. A contributor can put his own data at risk by allow-\ning access to a virtual image located in his machine. Likewise, consumers are vulner-\nable to malicious contributors. Nodes in DC are more likely to be vulnerable to out-\nside attacks due to weaknesses in local antivirus software and firewalls.  \nVirtualisation can be vital in order to isolate the host completely from guest oper-\nating systems and, thus, prevent any unwanted access from either party. Trust mecha-\nnisms can be employed in this matter. For example, a DC can maintain a behaviour \ntable which contains information about both consumers and contributors. The table \ncan be used to decide which parties are trustworthy enough to join the cloud. Fur-\nthermore, VCCs should rely on autonomous mechanisms such as sandbox or certifi-\ncation in order to prevent various attacks from participants [16]. \n5.2  Resource Management  \nResources in volunteer clouds are highly heterogeneous, therefore, managing them \ncan be considered problematic. Virtualisation plays a key role in Desktop Clouds \nbecause it virtualises contributed resources and delivers them to users as VMs. DCs \nface a challenge of developing a resource allocation mechanism that is able to: a) \nmanage non-dedicated, heterogeneous resources, b) deliver a virtualized machine to \nupper level in DCs and c) work closely with users’ tasks in order to find most suitable \nnodes for each request.  \nIt has been pointed out that lacking central management in DCs cause a major is-\nsue in terms of reliability and state maintenance in case of failures [17]. The infra-\nstructure of DC is consisted of nodes that are highly volatile. Therefore, fault recov-\nery mechanisms are crucial in order to improve reliability in this environment [10]. In \naddition, volunteer clouds require means to interact with other clouds for data migra-\ntion or to gain extra computing resources [4]. \n5.3  Quality of Service \nVCCs are expected to offer services at a low level of reliability and availability due to \nthe fact that they depend on unreliable volunteered resources which can join or leave \nthe cloud without prior knowledge for various reasons [7]. Availability of individual \nnodes is considered a primary issue in VCCs [10]. For example, it is estimated that \nresource unavailability can reach up to 50% in volunteer projects [18]. Availability of \neach individual node can affect the service quality of VCC. Andrzejak et al. [19] \npropose a technique to predict the availability of a group of high volatility resources. \n \n \n596 Conclusion \nThis paper has introduced Desktop Clouds as being a new type of Cloud computing. \nDesktop Cloud aims at providing services based on Cloud business model on top on \ninfrastructure that is not made for this purpose. The success of Desktop Grids projects \nhas simulated the idea of applying the same concept within Cloud computing. How-\never, the paper has presented several research issues that need further attention. \nReferences \n1.  Kirby, G., Dearle, A., Macdonald, A., Fernandes, A.: An Approach to Ad hoc Cloud \nComputing. Arxiv Prepr. arXiv1002.4738. (2010). \n2.  Chandra, A., Weissman, J.: Nebulas: Using distributed voluntary resources to build clouds. \nProceedings of the 2009 conference on Hot topics in cloud computing. pp. 2–2. USENIX \nAssociation (2009). \n3.  Weissman, J.B., Sundarrajan, P., Gupta, A., Ryden, M., Nair, R., Chandra, A.: Early \nexperience with the distributed nebula cloud. Proceedings of the fourth international \nworkshop on Data-intensive distributed computing. pp. 17–26. ACM (2011). \n4.  Cunsolo, V.D., Distefano, S., Puliafito, A., Scarpa, M.: Volunteer computing and desktop \ncloud: The cloud@ home paradigm. Network Computing and Applications, 2009. NCA \n2009. Eighth IEEE International Symposium on. pp. 134–139. IEEE (2009). \n5.  Cunsolo, V., Distefano, S.: From volunteer to cloud computing: cloud@ home. Conf. \nComput. Front. 103–104 (2010). \n6.  Harutyunyan, a, Blomer, J., Buncic, P., Charalampidis, I., Grey, F., Karneyeu, a, Larsen, \nD., Lombraña González, D., Lisec, J., Segal, B., Skands, P.: CernVM Co-Pilot: an \nExtensible Framework for Building Scalable Computing Infrastructures on the Cloud. J. \nPhys. Conf. Ser. 396, 032054 (2012). \n7.  Andrzejak, A., Kondo, D., Anderson, D.P.: Exploiting non-dedicated resources for cloud \ncomputing. 2010 IEEE Netw. Oper. Manag. Symp. - NOMS 2010. 341–348 (2010). \n8.  Litzkow, M.J., Livny, M., Mutka, M.W.: Condor-a hunter of idle workstations. [1988] \nProceedings. 8th Int. Conf. Distrib. 104–111 (1988). \n9.  Cunsolo, V., Distefano, S., Puliafito, A., Scarp, M.: Cloud@ home: Bridging the gap \nbetween volunteer and cloud computing. ICIC’09 Proc. 5th Int. Conf. Emerg. Intell. \nComput. Technol. Appl. 2009. (2009). \n10. Marosi, A., Kovács, J., Kacsuk, P.: Towards a volunteer cloud system. Futur. Gener. \nComput. Syst. (2012). \n11. Gupta, A., Awasthi, L.K.L.: Peer enterprises: A viable alternative to Cloud computing? \nInternet Multimedia Services Architecture and Applications (IMSAA), 2009 IEEE \nInternational Conference on. pp. 1–6. IEEE (2009). \n12. Arpaci, R.H., Dusseau, A.C., Vahdat, A.M., Liu, L.T., Anderson, T.E., Patterson, D.A.: \nThe Interaction of Parallel and Sequential Workloads on a Network of Workstations. ACM \n(1995). \n13. Foster, I., Zhao, Y., Raicu, I., Lu, S.: Cloud computing and grid computing 360-degree \ncompared. Grid Computing Environments Workshop, 2008. GCE’08. pp. 1–10. IEEE \n(2008). \n14. Dillon, T., Wu, C., Chang, E.: Cloud computing: Issues and challenges. 2010 24th IEEE \nInternational Conference on Advanced Information Networking and Applications. pp. 27–\n33. IEEE (2010). \n6015. Ristenpart, T., Tromer, E., Savage, S., Shacham, H.: Hey, you, get off of my cloud: \nexploring information leakage in third-party compute clouds. Proceedings of the 16th ACM \nconference on Computer and communications security. pp. 199–212. ACM (2009). \n16. Cao, B.Q., Li, B., Xia, Q.M.: A Service-Oriented Qos-Assured and Multi-Agent Cloud \nComputing Architecture. Cloud Comput. 644–649 (2009). \n17.  Endo, P., Palhares, A. de A., Pereira, N.N., Goncalves, G.E., Sadok, D., Kelner, J., \nMelander, B., Mangs, J.-E.: Resource allocation for distributed cloud: concepts and \nresearch challenges. Network, IEEE. 25, 42–46 (2011). \n18.  Kondo, D., Taufer, M., Brooks, C.: Characterizing and evaluating desktop grids: An \nempirical study. Int. Parallel Distrib. Process. Symp. 2004. 00, (2004). \n19. Andrzejak, A., Kondo, D., Anderson, D.P.: Ensuring collective availability in volatile \nresource pools via forecasting. Manag. Large-Scale Serv. 149–161 (2008). \n61",
    "Link": ""
}